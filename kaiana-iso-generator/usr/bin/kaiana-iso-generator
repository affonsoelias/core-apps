#!/bin/bash

######################
# Kaiana Iso Generator
# by Bruno Gonçalves Araujo <bigbruno@gmail.com>
# licensed under GPLv2 or greater.
# released in 07/10/2015


#Translation
export TEXTDOMAINDIR="/usr/share/locale-langpack"
export TEXTDOMAIN=kaiana-iso-generator

#Confere se o usuário tem permissões de root (administrador)
if test $(id -u) != 0
then                 
    echo $"You don't have root permission."
    exit                     
fi


case "$1" in

    --create-32-bits)
	if [ "$3" = "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi
	if [ "$4" != "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi

	/usr/share/kaiana/iso-generator/remaster.sh i386 "$2" "$3"
	exit
    ;;
    
    --create-64-bits)
	if [ "$3" = "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi
	if [ "$4" != "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi

	/usr/share/kaiana/iso-generator/remaster.sh amd64 "$2" "$3"
	exit
    ;;

    --list-versions)
	    /usr/share/kaiana/iso-generator/repositories.sh --list-version
	exit
    ;;

    --list-repositories)
	if [ "$2" = "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi
	if [ "$3" != "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi

	    /usr/share/kaiana/iso-generator/repositories.sh --list-repositories $2
	exit
    ;;

     --description-repository)
	if [ "$3" = "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi
	if [ "$4" != "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi

	    /usr/share/kaiana/iso-generator/repositories.sh --description $2 $3
	exit
    ;;
 
    --description-all-repositories)
	if [ "$2" = "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi
	if [ "$3" != "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi

	    /usr/share/kaiana/iso-generator/repositories.sh --description-all $2
	exit
    ;;

    --add-repository)
	if [ "$4" = "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi
	if [ "$5" != "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi

	    /usr/share/kaiana/iso-generator/repositories.sh --add $2 $3 "$4"
	exit
    ;;

    --add-all-repositories)
	if [ "$3" = "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi
	if [ "$4" != "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi

	    /usr/share/kaiana/iso-generator/repositories.sh --add-all $2 "$3"
	exit
    ;;

    --install-packages-in-terminal)
	if [ "$2" = "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi
	if [ "$3" != "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi

	    /usr/share/kaiana/iso-generator/install_packages.sh "$2"
	exit
    ;;

    --install-packages-in-synaptic)
	if [ "$2" = "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi
	if [ "$3" != "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi

	    /usr/share/kaiana/iso-generator/install_packages_synaptic.sh "$2"
	exit
    ;;

    --synaptic)
	if [ "$2" = "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi
	if [ "$3" != "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi

	    /usr/share/kaiana/iso-generator/synaptic.sh "$2"
	exit
    ;;

    
        --shell)
	if [ "$2" = "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi
	if [ "$3" != "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi

	    /usr/share/kaiana/iso-generator/shell.sh "$2"
	exit
    ;;

    
        --compact)
	if [ "$4" = "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi
	if [ "$5" != "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi

	    /usr/share/kaiana/iso-generator/makesquashfs.sh "$2" "$3" "$4"
	exit
    ;;


        --makeiso)
	if [ "$3" = "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi
	if [ "$4" != "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi

	    /usr/share/kaiana/iso-generator/makeiso.sh "$2" "$3"
	exit
    ;;

        --prelink)
	if [ "$2" = "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi
	if [ "$3" != "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi

	    /usr/share/kaiana/iso-generator/prelink.sh "$2"
	exit
    ;;

        --tweaks)
	if [ "$2" = "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi
	if [ "$3" != "" ]; then
	    echo $"Invalid parameters."
	    exit
	fi

	    /usr/share/kaiana/iso-generator/tweaks.sh "$2"
	exit
    ;;



    *)
	echo ""
	echo "################################"
	echo $"#     Kaiana iso generator     #"
	echo $"#   Make your Ubuntu remaster  #"
	echo "################################"
	echo ""
	echo "######"
	echo $"# First create basic system, use 32 bits or 64 bits:"
	echo "######"
	echo $"--list-versions  		List all versions avaliables"
	echo $"--create-32-bits		First command, generate basic system, select version and work folder, example: --create-32-bits trusty \"/home/user/remaster32\""
	echo $"--create-64-bits		First command, generate basic system, select version and work folder, example: --create-64-bits trusty \"/home/user/remaster64\""
	echo ""
	echo ""
	echo "######"
	echo $"# Repositories"
	echo "######"
	echo $"--list-repositories		List all repositories in this version, example: --list-repositories trusty"
	echo $"--description-repository  	View repository description, example: --description-repository trusty uniaolivre"
	echo $"--description-all-repositories	View all repositories descriptions for one version, example: --description-all-repositories trusty"
	echo $"--add-repository		Add repository in remaster, example: --add-repository trusty uniaolivre \"/home/user/remaster\""
	echo $"--add-all-repositories		Add repositories in remaster, example: --add-all-repositories trusty \"/home/user/remaster\""
	echo ""
	echo ""
	echo "######"
	echo $"# Packages"
	echo "######"
	echo $"--install-packages-in-terminal	Install all packages listed in install-apps.txt and install-drivers.txt, directly in terminal with apt-get, example: --install-packages-in-terminal \"/home/user/remaster\""
	echo $"--install-packages-in-synaptic	Install all packages listed in install-apps.txt and install-drivers.txt, using synaptic package manager, example: --install-packages-in-synaptic \"/home/user/remaster\""
	echo $"--synaptic  			Manage remaster packages using synaptic"
	echo ""
	echo ""
	echo "######"
	echo $"# Others"
	echo "######"
	echo $"--shell				Login in terminal of remaster with root user for interact and manage your remaster, example: --terminal \"/home/user/remaster\""
	echo $"--prelink				Run prelink for reduce ram memory usage, example: --prelink \"/home/user/remaster\""
	echo $"--tweaks				Tweaks for improve system usability, see tweaks in file /usr/share/kaiana/iso-generator/tweaks.sh, example: --tweaks \"/home/user/remaster\""
	echo ""
	echo ""
	echo "######"
	echo $"# Finalizing"
	echo "######"
	echo $"--compact			Compact folder chroot and generate file image/casper/filesystem.squashfs, choose compaction type, gzip for faster compactation and larger file or xz for slower compactation but smaller file, and name of your remaster, example: --compact \"/home/user/remaster\" \"gzip\" \"Kaiana 14.04 final\""
	echo $"--makeiso			Convert image folder in .iso file for make bootable DVD or pendrive, iso file is generated in your work folder of remaster, in the same folder as apps and drivers files, example: --makeiso \"/home/user/remaster\" \"Kaiana 14.04 final\""
	echo ""
	echo ""


	exit
    ;;

esac